pscanbeta.desc = Reglas de escaneo pasivas en estado Beta

pscanbeta.inpagebanner.desc = El servidor devolvi\u00f3 una cadena mostr\u00f3 el banner con la versi\u00f3n en el contenido de la respuesta. Estas filtraciones de informaci\u00f3n pueden permitir a los atacantes centrarse en problemas espec\u00edficos que afecten al producto y la versi\u00f3n en uso.
pscanbeta.inpagebanner.name = Fuga de informaci\u00f3n en el Banner de la P\u00e1gina
pscanbeta.inpagebanner.other = Existe la posibilidad de que lo encontrado est\u00e9 en un valor en los headers, en lugar de en la cadena que coincide en el cuerpo de la respuesta.
pscanbeta.inpagebanner.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/
pscanbeta.inpagebanner.soln = Configura el servidor para evitar este tipo de fugas de informaci\u00f3n. Por ejemplo\:\nEn Tomcat, esto se hace mediante la directiva "server" y la implementaci\u00f3n de p\u00e1ginas de error personalizadas.\nEn Apache, esto se hace mediante las directivas "ServerSignature" y "ServerTokens".

pscanbeta.jsfunction.desc = Parece que se est\u00e1 utilizando una funci\u00f3n JS peligrosa que podr\u00eda hacer que el sitio sea vulnerable.
pscanbeta.jsfunction.name = Funciones Peligrosas JS
pscanbeta.jsfunction.refs = https\://angular.io/guide/security
pscanbeta.jsfunction.soln = Consulta las referencias para obtener consejos de seguridad sobre el uso de estas funciones.

pscanbeta.jso.desc = Parece que se est\u00e1 utilizando serializaci\u00f3n de Java. Si no se valida correctamente, un atacante puede enviar un objeto especialmente dise\u00f1ado. Esto es muy peligroso ya que puede provocar "ejecuci\u00f3n remota de c\u00f3digo". Se ha detectado una secuencia m\u00e1gica que identifica JSO (Base64\: rO0AB, Raw\: 0xac, 0xed, 0x00, 0x05).
pscanbeta.jso.name = Objeto de serializaci\u00f3n de Java
pscanbeta.jso.refs = https\://www.oracle.com/java/technologies/javase/seccodeguide.html\#8
pscanbeta.jso.soln = La deserializaci\u00f3n de datos que no son de confianza es intr\u00ednsecamente peligrosa y debe evitarse.

pscanbeta.name = Reglas de Escaneo Pasivas - beta.

pscanbeta.nonstorable.desc = El contenido de la respuesta no se puede almacenar en cach\u00e9 mediante componentes como servidores proxy. Si la respuesta no contiene informaci\u00f3n confidencial, personal o espec\u00edfica del usuario, puede ser una ventaja almacenarla y guardarla en cach\u00e9 para mejorar el rendimiento.
pscanbeta.nonstorable.name = Contenido No-Almacenable
pscanbeta.nonstorable.refs = https\://datatracker.ietf.org/doc/html/rfc7234\nhttps\://datatracker.ietf.org/doc/html/rfc7231\nhttps\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
pscanbeta.nonstorable.soln = El contenido puede marcarse como almacenable asegur\u00e1ndose de que se cumplan las siguientes condiciones\:\nLa cach\u00e9 debe comprender el m\u00e9todo de solicitud y definirlo como almacenable en cach\u00e9 ("GET", "HEAD" y "POST" est\u00e1n definidos actualmente como almacenables en cach\u00e9)\nEl c\u00f3digo de estado de respuesta debe ser comprendido por la cach\u00e9 (una de las clases de respuesta 1XX, 2XX, 3XX, 4XX o 5XX se entienden generalmente)\nLa directiva de cach\u00e9 "no-store" no debe aparecer en los campos de encabezado de solicitud o respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "compartidas", como los cach\u00e9s "proxy", la directiva de respuesta "private" no debe aparecer en la respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "compartidas", como los cach\u00e9s "proxy", el campo de encabezado "Authorization" no debe aparecer en la solicitud, a menos que la respuesta lo permita expl\u00edcitamente (utilizando una de las directivas de respuesta "must-revalidate", "public" o "s-maxage" de Cache-Control)\nAdem\u00e1s de las condiciones anteriores, se debe cumplir al menos una de las siguientes condiciones\: Tambi\u00e9n debe cumplirse con la respuesta\:\nDebe contener un campo de encabezado "Expires"\nDebe contener una directiva de respuesta "max-age"\nPara cach\u00e9s "compartidas", como cach\u00e9s "proxy", debe contener una directiva de respuesta "s-maxage"\nDebe contener una "Extensi\u00f3n de control de cach\u00e9" que permita almacenarlo en cach\u00e9\nDebe tener un c\u00f3digo de estado que est\u00e9 definido como almacenable en cach\u00e9 de manera predeterminada (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).

pscanbeta.payloader.desc = Proporciona soporte para las cargas \u00fatiles personalizadas en las reglas de escaneo.
pscanbeta.payloader.name = Passive Scan Rules Beta Custom Payloads

pscanbeta.permissionspolicymissing.deprecated.desc = The header has now been renamed to Permissions-Policy.
pscanbeta.permissionspolicymissing.deprecated.name = Deprecated Feature Policy Header Set
pscanbeta.permissionspolicymissing.deprecated.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy\nhttps\://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/
pscanbeta.permissionspolicymissing.deprecated.soln = Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header instead of the Feature-Policy header.
pscanbeta.permissionspolicymissing.desc = Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.
pscanbeta.permissionspolicymissing.name = Permissions Policy Header Not Set
pscanbeta.permissionspolicymissing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy\nhttps\://developer.chrome.com/blog/feature-policy/\nhttps\://scotthelme.co.uk/a-new-security-header-feature-policy/\nhttps\://w3c.github.io/webappsec-feature-policy/\nhttps\://www.smashingmagazine.com/2018/12/feature-policy/
pscanbeta.permissionspolicymissing.soln = Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.

pscanbeta.servletparameterpollution.desc = Unspecified form action\: HTTP parameter override attack potentially possible. This is a known problem with Java Servlets but other platforms may also be vulnerable.
pscanbeta.servletparameterpollution.name = HTTP Parameter Override
pscanbeta.servletparameterpollution.refs = https\://download.oracle.com/javaee-archive/servlet-spec.java.net/jsr340-experts/att-0317/OnParameterPollutionAttacks.pdf
pscanbeta.servletparameterpollution.soln = All forms must specify the action URL.

pscanbeta.site-isolation.coep.desc = Cross-Origin-Embedder-Policy header is a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS).
pscanbeta.site-isolation.coep.name = Cross-Origin-Embedder-Policy Header Missing or Invalid
pscanbeta.site-isolation.coep.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy
pscanbeta.site-isolation.coep.soln = Ensure that the application/web server sets the Cross-Origin-Embedder-Policy header appropriately, and that it sets the Cross-Origin-Embedder-Policy header to 'require-corp' for documents.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Embedder-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-embedder-policy).
pscanbeta.site-isolation.coop.desc = Cross-Origin-Opener-Policy header is a response header that allows a site to control if others included documents share the same browsing context. Sharing the same browsing context with untrusted documents might lead to data leak.
pscanbeta.site-isolation.coop.name = Cross-Origin-Opener-Policy Header Missing or Invalid
pscanbeta.site-isolation.coop.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy
pscanbeta.site-isolation.coop.soln = Ensure that the application/web server sets the Cross-Origin-Opener-Policy header appropriately, and that it sets the Cross-Origin-Opener-Policy header to 'same-origin' for documents.\n'same-origin-allow-popups' is considered as less secured and should be avoided.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Opener-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-opener-policy).
pscanbeta.site-isolation.corp.desc = Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.
pscanbeta.site-isolation.corp.name = Cross-Origin-Resource-Policy Header Missing or Invalid
pscanbeta.site-isolation.corp.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy
pscanbeta.site-isolation.corp.soln = Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.\n'same-site' is considered as less secured and should be avoided.\nIf resources must be shared, set the header to 'cross-origin'.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-resource-policy).
pscanbeta.site-isolation.name = Insufficient Site Isolation Against Spectre Vulnerability

pscanbeta.sourcecodedisclosure.desc = Application Source Code was disclosed by the web server.
pscanbeta.sourcecodedisclosure.name = Source Code Disclosure
pscanbeta.sourcecodedisclosure.refs = https\://www.wsj.com/articles/BL-CIOB-2999
pscanbeta.sourcecodedisclosure.soln = Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server.

pscanbeta.sri-integrity.desc = The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content.
pscanbeta.sri-integrity.name = Sub Resource Integrity Attribute Missing
pscanbeta.sri-integrity.otherinfo = The following hash was calculated (using base64 encoding of the output of the hash algorithm\: SHA-384) for the script in question {0}
pscanbeta.sri-integrity.refs = https\://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity
pscanbeta.sri-integrity.soln = Provide a valid integrity attribute to the tag.

pscanbeta.storabilitycacheability.name = Capacidad de Almacenamiento en Cach\u00e9 de Contenido

pscanbeta.storablecacheable.desc = Los componentes de almacenamiento en cach\u00e9, como los servidores proxy, pueden almacenar el contenido de las respuestas y estos pueden recuperarlo directamente de la cach\u00e9, en lugar de recuperarlo del servidor de origen, en respuesta a solicitudes similares de otros usuarios. Si los datos de respuesta son confidenciales, personales o espec\u00edficos del usuario, esto puede provocar que se filtre informaci\u00f3n confidencial. En algunos casos, esto puede incluso provocar que un usuario obtenga el control total de la sesi\u00f3n de otro usuario, seg\u00fan la configuraci\u00f3n de los componentes de almacenamiento en cach\u00e9 que se utilicen en su entorno. Este es principalmente un problema en los casos en que se configuran servidores de almacenamiento en cach\u00e9 "compartidos", como los "proxy" cache, en la red local. Esta configuraci\u00f3n se encuentra normalmente en entornos corporativos o educativos, por ejemplo.
pscanbeta.storablecacheable.name = Contenido Cacheable y Almacenable
pscanbeta.storablecacheable.otherinfo.liberallifetimeheuristic = En ausencia de una directiva de duraci\u00f3n de almacenamiento en cach\u00e9 expl\u00edcitamente especificada en la respuesta, se asumi\u00f3 una heur\u00edstica de duraci\u00f3n liberal de 1 a\u00f1o. Esto est\u00e1 permitido por rfc7234.
pscanbeta.storablecacheable.otherinfo.staleretrievenotblocked = La respuesta est\u00e1 obsoleta, y las respuestas obsoletas no est\u00e1n configuradas para ser revalidadas o bloqueadas, mediante las directivas de respuesta 'Cache-Control' 'must-revalidate', 'proxy-revalidate', 's-maxage' o 'max-age'.
pscanbeta.storablecacheable.refs = https\://datatracker.ietf.org/doc/html/rfc7234\nhttps\://datatracker.ietf.org/doc/html/rfc7231\nhttps\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
pscanbeta.storablecacheable.soln = Valida que la respuesta no contenga informaci\u00f3n confidencial, personal o espec\u00edfica del usuario. Si es as\u00ed, considere el uso de los siguientes encabezados de respuesta HTTP para limitar o evitar que otro usuario almacene y recupere el contenido de la memoria cach\u00e9\:\nCache-Control\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nEsta configuraci\u00f3n indica a los servidores de almacenamiento en cach\u00e9 compatibles con HTTP 1.0 y HTTP 1.1 que no almacenen la respuesta ni la recuperen (sin validaci\u00f3n) de la memoria cach\u00e9 en respuesta a una solicitud similar.

pscanbeta.storablenoncacheable.desc = El contenido de la respuesta se puede almacenar mediante componentes de almacenamiento en cach\u00e9, como servidores proxy, pero no se recuperar\u00e1 directamente del cach\u00e9, sin validar la solicitud en sentido ascendente, en respuesta a solicitudes similares de otros usuarios.
pscanbeta.storablenoncacheable.name = Contenido Almacenable pero No-Cacheable
pscanbeta.storablenoncacheable.refs = https\://datatracker.ietf.org/doc/html/rfc7234\nhttps\://datatracker.ietf.org/doc/html/rfc7231\nhttps\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
